## Process this file with automake to generate Makefile.in.
## 19990904 mortene.

RegularSources = \
	SoAsciiText.cpp \
	SoCone.cpp \
	SoCube.cpp \
	SoCylinder.cpp \
	SoFaceSet.cpp \
	SoImage.cpp \
	SoIndexedFaceSet.cpp \
	SoIndexedLineSet.cpp \
	SoIndexedNurbsCurve.cpp \
	SoIndexedNurbsSurface.cpp \
	SoIndexedShape.cpp \
	SoIndexedTriangleStripSet.cpp \
	SoLineSet.cpp \
	SoMarkerSet.cpp \
	SoNonIndexedShape.cpp \
	SoNurbsCurve.cpp \
	SoNurbsSurface.cpp \
	SoPointSet.cpp \
	SoQuadMesh.cpp \
	SoShape.cpp \
	SoSphere.cpp \
	SoText2.cpp \
	SoText3.cpp \
	SoTriangleStripSet.cpp \
	SoVertexShape.cpp \
	soshape_primdata.cpp \
	soshape_bigtexture.cpp \
	soshape_trianglesort.cpp
LinkHackSources = \
	all-shapenodes-cpp.cpp
PublicHeaders = \
	../../include/Inventor/nodes/SoAsciiText.h \
	../../include/Inventor/nodes/SoCone.h \
	../../include/Inventor/nodes/SoCube.h \
	../../include/Inventor/nodes/SoCylinder.h \
	../../include/Inventor/nodes/SoFaceSet.h \
	../../include/Inventor/nodes/SoImage.h \
	../../include/Inventor/nodes/SoIndexedFaceSet.h \
	../../include/Inventor/nodes/SoIndexedLineSet.h \
	../../include/Inventor/nodes/SoIndexedNurbsCurve.h \
	../../include/Inventor/nodes/SoIndexedNurbsSurface.h \
	../../include/Inventor/nodes/SoIndexedShape.h \
	../../include/Inventor/nodes/SoIndexedTriangleStripSet.h \
	../../include/Inventor/nodes/SoLineSet.h \
	../../include/Inventor/nodes/SoMarkerSet.h \
	../../include/Inventor/nodes/SoNonIndexedShape.h \
	../../include/Inventor/nodes/SoNurbsCurve.h \
	../../include/Inventor/nodes/SoNurbsSurface.h \
	../../include/Inventor/nodes/SoPointSet.h \
	../../include/Inventor/nodes/SoQuadMesh.h \
	../../include/Inventor/nodes/SoShape.h \
	../../include/Inventor/nodes/SoSphere.h \
	../../include/Inventor/nodes/SoText2.h \
	../../include/Inventor/nodes/SoText3.h \
	../../include/Inventor/nodes/SoTriangleStripSet.h \
	../../include/Inventor/nodes/SoVertexShape.h
PrivateHeaders = \
	soshape_primdata.h \
	soshape_trianglesort.h \
	soshape_bigtexture.h

##$ BEGIN TEMPLATE Make-Common(shapenodes, nodes)
# **************************************************************************
# This template depends on the following variables having been set up before
# its invokation.
#
# PublicHeaders    - header files that should be installed
# PrivateHeaders   - source files that should be distributed, but not
#                    installed - including source-included source files.
# RegularSources   - source files compiled in this directory
# LinkHackSources  - alternative source files used on -enable-compact compilation
# ObsoletedHeaders - header files that should be removed upon installation

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.

DISTCLEANFILES = \
	ii_files/*.ii

if HACKING_COMPACT_BUILD
BuildSources = $(LinkHackSources)
ExtraSources = $(RegularSources)
else
BuildSources = $(RegularSources)
ExtraSources = $(LinkHackSources)
endif

if BUILD_WITH_MSVC
noinst_LIBRARIES = shapenodes.lst
else
if HACKING_DYNAMIC_MODULES
lib_LTLIBRARIES = libshapenodes@SUFFIX@LINKHACK.la
else
noinst_LTLIBRARIES = libshapenodes.la
endif
endif

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

DEFAULT_INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include $(ExtraIncludeDirs)

# header installation
if MAC_FRAMEWORK
libshapenodesincdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Headers/nodes
# hack to change libdir value when installing Mac OS X compiler framework
lib@nop@dir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Libraries
else
libshapenodesincdir = $(includedir)/Inventor/nodes
endif
libshapenodesinc_HEADERS = $(PublicHeaders)

libshapenodes_la_SOURCES = $(BuildSources)
EXTRA_libshapenodes_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

libshapenodes@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libshapenodes@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

shapenodes_lst_SOURCES = $(BuildSources)
EXTRA_shapenodes_lst_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

# this rule causes a make warning, so we remove it when it is not in use
shapenodes.lst: Makefile $(shapenodes_lst_OBJECTS)
	@echo "Linking shapenodes.lst..."; \
	rm -f $@; touch $@; \
	for i in $(shapenodes_lst_OBJECTS); do echo $$i >>$@; done

install-libshapenodesincHEADERS: $(libshapenodesinc_HEADERS)
	@$(NORMAL_INSTALL)
	@if test x"$(libshapenodesinc_HEADERS)" = x""; then :; else \
	  echo " $(mkinstalldirs) $(DESTDIR)$(libshapenodesincdir)"; \
	  $(mkinstalldirs) $(DESTDIR)$(libshapenodesincdir); \
	fi
	@list='$(libshapenodesinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  src="$$d$$p"; dst="$(DESTDIR)$(libshapenodesincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst" || exit 1; \
	  fi \
	done
	@list='$(ObsoletedHeaders)'; for f in $$list; do \
	  file="$(DESTDIR)$(libshapenodesincdir)/$$f"; \
	  if test -x "$$file"; then \
	    echo " rm -f $$file"; \
	    rm -f "$$file"; \
	  fi \
	done; \
	:

##$ END TEMPLATE Make-Common
