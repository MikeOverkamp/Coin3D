ExtraIncludeDirs = -I$(top_srcdir)/include/Inventor/annex
RegularSources = \
	HardCopy.cpp \
	PSVectorOutput.cpp \
	VectorOutput.cpp \
	VectorizeAction.cpp \
	VectorizeActionP.cpp \
	VectorizePSAction.cpp

LinkHackSources = \
	all-hardcopy-cpp.cpp
PublicHeaders = \
	../../include/Inventor/annex/HardCopy/SoHardCopy.h \
	../../include/Inventor/annex/HardCopy/SoPSVectorOutput.h \
	../../include/Inventor/annex/HardCopy/SoVectorOutput.h \
	../../include/Inventor/annex/HardCopy/SoVectorizeAction.h \
	../../include/Inventor/annex/HardCopy/SoVectorizePSAction.h

PrivateHeaders = VectorizeActionP.h VectorizeItems.h

##$ BEGIN TEMPLATE Make-Common(hardcopy, annex/HardCopy)
# **************************************************************************
# This template depends on the following variables having been set up before
# its invokation.
#
# PublicHeaders    - header files that should be installed
# PrivateHeaders   - source files that should be distributed, but not
#                    installed - including source-included source files.
# RegularSources   - source files compiled in this directory
# LinkHackSources  - alternative source files used on -enable-compact compilation
# ObsoletedHeaders - header files that should be removed upon installation

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.

DISTCLEANFILES = \
	ii_files/*.ii

if HACKING_COMPACT_BUILD
BuildSources = $(LinkHackSources)
ExtraSources = $(RegularSources)
else
BuildSources = $(RegularSources)
ExtraSources = $(LinkHackSources)
endif

if BUILD_WITH_MSVC
noinst_LIBRARIES = hardcopy.lst
else
if HACKING_DYNAMIC_MODULES
lib_LTLIBRARIES = libhardcopy@SUFFIX@LINKHACK.la
else
noinst_LTLIBRARIES = libhardcopy.la
endif
endif

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

DEFAULT_INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include $(ExtraIncludeDirs)

# header installation
if MAC_FRAMEWORK
libhardcopyincdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Headers/annex/HardCopy
# hack to change libdir value when installing Mac OS X compiler framework
lib@nop@dir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Libraries
else
libhardcopyincdir = $(includedir)/Inventor/annex/HardCopy
endif
libhardcopyinc_HEADERS = $(PublicHeaders)

libhardcopy_la_SOURCES = $(BuildSources)
EXTRA_libhardcopy_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

libhardcopy@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libhardcopy@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

hardcopy_lst_SOURCES = $(BuildSources)
EXTRA_hardcopy_lst_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

# this rule causes a make warning, so we remove it when it is not in use
hardcopy.lst: Makefile $(hardcopy_lst_OBJECTS)
	@echo "Linking hardcopy.lst..."; \
	rm -f $@; touch $@; \
	for i in $(hardcopy_lst_OBJECTS); do echo $$i >>$@; done

install-libhardcopyincHEADERS: $(libhardcopyinc_HEADERS)
	@$(NORMAL_INSTALL)
	@if test x"$(libhardcopyinc_HEADERS)" = x""; then :; else \
	  echo " $(mkinstalldirs) $(DESTDIR)$(libhardcopyincdir)"; \
	  $(mkinstalldirs) $(DESTDIR)$(libhardcopyincdir); \
	fi
	@list='$(libhardcopyinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  src="$$d$$p"; dst="$(DESTDIR)$(libhardcopyincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst"; \
	  fi \
	done
	@list='$(ObsoletedHeaders)'; for f in $$list; do \
	  file="$(DESTDIR)$(libhardcopyincdir)/$$f"; \
	  if test -x "$$file"; then \
	    echo " rm -f $$file"; \
	    rm -f "$$file"; \
	  fi \
	done

##$ END TEMPLATE Make-Common
