
RegularSources = \
	common.c \
	thread.c \
	mutex.c \
	rwmutex.c \
	storage.c \
	condvar.c \
	worker.c \
	wpool.c \
	sched.c \
	sync.c \
	fifo.c \
	barrier.c
LinkHackSources = \
	all-c.c
PublicHeaders = \
	../../include/Inventor/threads/SbThread.h \
	../../include/Inventor/threads/SbMutex.h \
	../../include/Inventor/threads/SbRWMutex.h \
	../../include/Inventor/threads/SbCondVar.h \
	../../include/Inventor/threads/SbStorage.h \
	../../include/Inventor/threads/SbTypedStorage.h \
	../../include/Inventor/threads/SbFifo.h \
	../../include/Inventor/threads/SbBarrier.h \
	../../include/Inventor/threads/SbThreadAutoLock.h
PrivateHeaders = \
	condvar_pthread.ic \
	condvar_win32.ic \
	mutex_pthread.ic \
	mutex_win32cs.ic \
	mutex_win32mutex.ic \
	thread_pthread.ic \
	thread_win32.ic \
	wrappers.cpp

if BUILD_WITH_MSVC
# win32 isn't able to link wrappers without including all dependencies
else
# also disabled for other platforms since there were also problems
# with IRIX CC
#noinst_PROGRAMS = wrappers
#wrappers_SOURCES = wrappers.cpp
#wrappers_LDADD = libthreads.la
endif

##$ BEGIN TEMPLATE Make-Common(threads)
# **************************************************************************
# This template depends on the following variables having been set up before
# its invokation.
#
# PublicHeaders    - header files that should be installed
# PrivateHeaders   - source files that should be distributed, but not
#                    installed - including source-included source files.
# RegularSources   - source files compiled in this directory
# LinkHackSources  - alternative source files used on -enable-compact compilation
# ObsoletedHeaders - header files that should be removed upon installation

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.

if HACKING_COMPACT_BUILD
BuildSources = $(LinkHackSources)
else
BuildSources = $(RegularSources)
endif

if BUILD_WITH_MSVC
noinst_LIBRARIES = threads.lst
else
if HACKING_DYNAMIC_MODULES
lib_LTLIBRARIES = libthreads@SUFFIX@LINKHACK.la
else
noinst_LTLIBRARIES = libthreads.la
endif
endif

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

INCLUDES = -I$(top_srcdir)/include -I$(top_builddir)/src/extensions

libthreads_la_SOURCES = $(BuildSources)
EXTRA_libthreads_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

libthreads@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libthreads@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

libthreadsincdir = $(includedir)/Inventor/threads
libthreadsinc_HEADERS = $(PublicHeaders)

threads_lst_SOURCES = $(BuildSources)
EXTRA_threads_lst_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

# this rule causes a make warning, so we remove it when it is not in use
threads.lst: Makefile $(threads_lst_OBJECTS)
	@echo "Linking threads.lst..."; \
	rm -f $@; touch $@; \
	for i in $(threads_lst_OBJECTS); do echo $$i >>$@; done

install-libthreadsincHEADERS: $(libthreadsinc_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libthreadsincdir)
	@list='$(libthreadsinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  src="$$d$$p"; dst="$(DESTDIR)$(libthreadsincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst"; \
	  fi \
	done
	@list='$(ObsoletedHeaders)'; for f in $$list; do \
	  file="$(DESTDIR)$(libthreadsincdir)/$$f"; \
	  if test -x "$$file"; then \
	    echo " rm -f $$file"; \
	    rm -f "$$file"; \
	  fi \
	done

##$ END TEMPLATE Make-Common

