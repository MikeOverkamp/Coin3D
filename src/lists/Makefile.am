## Process this file with automake to generate Makefile.in.
## 19990904 mortene.

RegularSources = \
	SbList.cpp \
	SbPList.cpp \
	SbIntList.cpp \
	SbVec3fList.cpp \
	SbStringList.cpp \
	SoActionMethodList.cpp \
	SoAuditorList.cpp \
	SoBaseList.cpp \
	SoCallbackList.cpp \
	SoDetailList.cpp \
	SoEnabledElementsList.cpp \
	SoEngineList.cpp \
	SoEngineOutputList.cpp \
	SoFieldList.cpp \
	SoNodeList.cpp \
	SoPathList.cpp \
	SoPickedPointList.cpp \
	SoTypeList.cpp
LinkHackSources = \
	all-lists-cpp.cpp
PublicHeaders = \
	../../include/Inventor/lists/SbList.h \
	../../include/Inventor/lists/SbPList.h \
	../../include/Inventor/lists/SbIntList.h \
	../../include/Inventor/lists/SbVec3fList.h \
	../../include/Inventor/lists/SbStringList.h \
	../../include/Inventor/lists/SoActionMethodList.h \
	../../include/Inventor/lists/SoAuditorList.h \
	../../include/Inventor/lists/SoBaseList.h \
	../../include/Inventor/lists/SoCallbackList.h \
	../../include/Inventor/lists/SoDetailList.h \
	../../include/Inventor/lists/SoEnabledElementsList.h \
	../../include/Inventor/lists/SoEngineList.h \
	../../include/Inventor/lists/SoEngineOutputList.h \
	../../include/Inventor/lists/SoFieldList.h \
	../../include/Inventor/lists/SoNodeList.h \
	../../include/Inventor/lists/SoPathList.h \
	../../include/Inventor/lists/SoPickedPointList.h \
	../../include/Inventor/lists/SoTypeList.h
PrivateHeaders =

##$ BEGIN TEMPLATE Make-Common(lists, lists)
# **************************************************************************
# This template depends on the following variables having been set up before
# its invokation.
#
# PublicHeaders    - header files that should be installed
# PrivateHeaders   - source files that should be distributed, but not
#                    installed - including source-included source files.
# RegularSources   - source files compiled in this directory
# LinkHackSources  - alternative source files used on -enable-compact compilation
# ObsoletedHeaders - header files that should be removed upon installation

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.

DISTCLEANFILES = \
	ii_files/*.ii

if HACKING_COMPACT_BUILD
BuildSources = $(LinkHackSources)
ExtraSources = $(RegularSources)
else
BuildSources = $(RegularSources)
ExtraSources = $(LinkHackSources)
endif

if BUILD_WITH_MSVC
noinst_LIBRARIES = lists.lst
else
if HACKING_DYNAMIC_MODULES
lib_LTLIBRARIES = liblists@SUFFIX@LINKHACK.la
else
noinst_LTLIBRARIES = liblists.la
endif
endif

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

DEFAULT_INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include $(ExtraIncludeDirs)

# header installation
if MAC_FRAMEWORK
liblistsincdir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Headers/lists
# hack to change libdir value when installing Mac OS X compiler framework
lib@nop@dir = $(MAC_FRAMEWORK_PREFIX)/$(MAC_FRAMEWORK_NAME).framework/Versions/$(MAC_FRAMEWORK_VERSION)/Libraries
else
liblistsincdir = $(includedir)/Inventor/lists
endif
liblistsinc_HEADERS = $(PublicHeaders)

liblists_la_SOURCES = $(BuildSources)
EXTRA_liblists_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

liblists@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_liblists@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

lists_lst_SOURCES = $(BuildSources)
EXTRA_lists_lst_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(ExtraSources)

# this rule causes a make warning, so we remove it when it is not in use
lists.lst: Makefile $(lists_lst_OBJECTS)
	@echo "Linking lists.lst..."; \
	rm -f $@; touch $@; \
	for i in $(lists_lst_OBJECTS); do echo $$i >>$@; done

install-liblistsincHEADERS: $(liblistsinc_HEADERS)
	@$(NORMAL_INSTALL)
	@if test x"$(liblistsinc_HEADERS)" = x""; then :; else \
	  echo " $(mkinstalldirs) $(DESTDIR)$(liblistsincdir)"; \
	  $(mkinstalldirs) $(DESTDIR)$(liblistsincdir); \
	fi
	@list='$(liblistsinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  src="$$d$$p"; dst="$(DESTDIR)$(liblistsincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst" || exit 1; \
	  fi \
	done
	@list='$(ObsoletedHeaders)'; for f in $$list; do \
	  file="$(DESTDIR)$(liblistsincdir)/$$f"; \
	  if test -x "$$file"; then \
	    echo " rm -f $$file"; \
	    rm -f "$$file"; \
	  fi \
	done; \
	:

##$ END TEMPLATE Make-Common
