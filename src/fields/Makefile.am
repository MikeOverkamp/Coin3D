## Process this file with automake to generate Makefile.in.
## 19990904 mortene.

RegularSources = \
	SoField.cpp \
	SoFieldContainer.cpp \
	SoFieldData.cpp \
	SoMFBitMask.cpp \
	SoMFBool.cpp \
	SoMFColor.cpp \
	SoMFEngine.cpp \
	SoMFEnum.cpp \
	SoMFFloat.cpp \
	SoMFInt32.cpp \
	SoMFMatrix.cpp \
	SoMFName.cpp \
	SoMFNode.cpp \
	SoMFPath.cpp \
	SoMFPlane.cpp \
	SoMFRotation.cpp \
	SoMFShort.cpp \
	SoMFString.cpp \
	SoMFTime.cpp \
	SoMFUInt32.cpp \
	SoMFUShort.cpp \
	SoMFVec2f.cpp \
	SoMFVec3f.cpp \
	SoMFVec3d.cpp \
	SoMFVec4f.cpp \
	SoMField.cpp \
	SoSFBitMask.cpp \
	SoSFBool.cpp \
	SoSFColor.cpp \
	SoSFEngine.cpp \
	SoSFEnum.cpp \
	SoSFFloat.cpp \
	SoSFImage.cpp \
	SoSFImage3.cpp \
	SoSFInt32.cpp \
	SoSFMatrix.cpp \
	SoSFName.cpp \
	SoSFNode.cpp \
	SoSFPath.cpp \
	SoSFPlane.cpp \
	SoSFRotation.cpp \
	SoSFShort.cpp \
	SoSFString.cpp \
	SoSFTime.cpp \
	SoSFTrigger.cpp \
	SoSFUInt32.cpp \
	SoSFUShort.cpp \
	SoSFVec2s.cpp \
	SoSFVec2f.cpp \
	SoSFVec3d.cpp \
	SoSFVec3s.cpp \
	SoSFVec3f.cpp \
	SoSFVec4f.cpp \
	SoSField.cpp \
	SoGlobalField.cpp
LinkHackSources = \
	all.cpp
PublicHeaders = \
	../../include/Inventor/fields/SoSubField.h \
	../../include/Inventor/fields/SoFields.h \
	../../include/Inventor/fields/SoField.h \
	../../include/Inventor/fields/SoFieldContainer.h \
	../../include/Inventor/fields/SoFieldData.h \
	../../include/Inventor/fields/SoMFBitMask.h \
	../../include/Inventor/fields/SoMFBool.h \
	../../include/Inventor/fields/SoMFColor.h \
	../../include/Inventor/fields/SoMFEngine.h \
	../../include/Inventor/fields/SoMFEnum.h \
	../../include/Inventor/fields/SoMFFloat.h \
	../../include/Inventor/fields/SoMFInt32.h \
	../../include/Inventor/fields/SoMFLong.h \
	../../include/Inventor/fields/SoMFMatrix.h \
	../../include/Inventor/fields/SoMFName.h \
	../../include/Inventor/fields/SoMFNode.h \
	../../include/Inventor/fields/SoMFPath.h \
	../../include/Inventor/fields/SoMFPlane.h \
	../../include/Inventor/fields/SoMFRotation.h \
	../../include/Inventor/fields/SoMFShort.h \
	../../include/Inventor/fields/SoMFString.h \
	../../include/Inventor/fields/SoMFTime.h \
	../../include/Inventor/fields/SoMFUInt32.h \
	../../include/Inventor/fields/SoMFULong.h \
	../../include/Inventor/fields/SoMFUShort.h \
	../../include/Inventor/fields/SoMFVec2f.h \
	../../include/Inventor/fields/SoMFVec3f.h \
	../../include/Inventor/fields/SoMFVec3d.h \
	../../include/Inventor/fields/SoMFVec4f.h \
	../../include/Inventor/fields/SoMField.h \
	../../include/Inventor/fields/SoSFBitMask.h \
	../../include/Inventor/fields/SoSFBool.h \
	../../include/Inventor/fields/SoSFColor.h \
	../../include/Inventor/fields/SoSFEngine.h \
	../../include/Inventor/fields/SoSFEnum.h \
	../../include/Inventor/fields/SoSFFloat.h \
	../../include/Inventor/fields/SoSFImage.h \
	../../include/Inventor/fields/SoSFImage3.h \
	../../include/Inventor/fields/SoSFInt32.h \
	../../include/Inventor/fields/SoSFLong.h \
	../../include/Inventor/fields/SoSFMatrix.h \
	../../include/Inventor/fields/SoSFName.h \
	../../include/Inventor/fields/SoSFNode.h \
	../../include/Inventor/fields/SoSFPath.h \
	../../include/Inventor/fields/SoSFPlane.h \
	../../include/Inventor/fields/SoSFRotation.h \
	../../include/Inventor/fields/SoSFShort.h \
	../../include/Inventor/fields/SoSFString.h \
	../../include/Inventor/fields/SoSFTime.h \
	../../include/Inventor/fields/SoSFTrigger.h \
	../../include/Inventor/fields/SoSFUInt32.h \
	../../include/Inventor/fields/SoSFULong.h \
	../../include/Inventor/fields/SoSFUShort.h \
	../../include/Inventor/fields/SoSFVec2s.h \
	../../include/Inventor/fields/SoSFVec2f.h \
	../../include/Inventor/fields/SoSFVec3s.h \
	../../include/Inventor/fields/SoSFVec3f.h \
	../../include/Inventor/fields/SoSFVec3d.h \
	../../include/Inventor/fields/SoSFVec4f.h \
	../../include/Inventor/fields/SoSField.h
PrivateHeaders = \
	../../include/Inventor/fields/SoSubFieldP.h \
	../../include/Inventor/fields/SoGlobalField.h

##$ BEGIN TEMPLATE Make-Common(fields)

# Everything below is autogenerated from a macro, so don't modify
# within the Makefile.am itself. 19991201 mortene.

if HACKING_COMPACT_BUILD
BuildSources = $(LinkHackSources)
else
BuildSources = $(RegularSources)
endif

if BUILD_WITH_MSVC
noinst_LIBRARIES = fields.lst
else
if HACKING_DYNAMIC_MODULES
lib_LTLIBRARIES = libfields@SUFFIX@LINKHACK.la
else
noinst_LTLIBRARIES = libfields.la
endif
endif

# Remove any linklibraries detected by configure, as they are not
# needed in the submodules -- only in the toplevel libCoin build.
LIBS = 

INCLUDES = -I$(top_srcdir)/include -I$(top_builddir)/src/extensions

libfields_la_SOURCES = $(BuildSources)
EXTRA_libfields_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

libfields@SUFFIX@LINKHACK_la_SOURCES = $(BuildSources)
EXTRA_libfields@SUFFIX@LINKHACK_la_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

libfieldsincdir = $(includedir)/Inventor/fields
libfieldsinc_HEADERS = $(PublicHeaders)

fields_lst_SOURCES = $(BuildSources)
EXTRA_fields_lst_SOURCES = \
	$(PublicHeaders) $(PrivateHeaders) $(RegularSources) $(LinkHackSources)

# this rule causes a make warning, so we remove it when it is not in use
fields.lst: Makefile $(fields_lst_OBJECTS)
	@echo "Linking fields.lst..."; \
	rm -f $@; \
	for i in $(fields_lst_OBJECTS); do echo $$i >>$@; done

install-libfieldsincHEADERS: $(libfieldsinc_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libfieldsincdir)
	@list='$(libfieldsinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  src="$$d$$p"; dst="$(DESTDIR)$(libfieldsincdir)/$$f"; \
	  if cmp -s "$$src" "$$dst"; then :; else \
	    echo " $(INSTALL_HEADER) $$src $$dst"; \
	    $(INSTALL_HEADER) "$$src" "$$dst"; \
	  fi \
	done

##$ END TEMPLATE Make-Common
